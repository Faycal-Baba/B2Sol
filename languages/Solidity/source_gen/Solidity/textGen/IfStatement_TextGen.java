package Solidity.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class IfStatement_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("if");
    tgs.append(" ");
    tgs.append("(");
    tgs.append(" ");
    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.condition$BmkR));
    tgs.append(" ");
    tgs.append(")");
    tgs.append("{");
    tgs.newLine();
    tgs.increaseIndent();
    for (SNode ifTrueSt : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.ifTrueBranch$BmMT))) {
      tgs.indent();
      tgs.appendNode(ifTrueSt);
      tgs.newLine();
    }
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("}");
    tgs.indent();
    if (ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.elseBeanch$UAfB)).count() >= 1) {

      tgs.newLine();
      tgs.indent();
      tgs.append("else");
      tgs.append(" ");
      tgs.append("{");
      tgs.newLine();
      tgs.increaseIndent();
      for (SNode ifFalseSt : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.elseBeanch$UAfB))) {
        tgs.indent();
        tgs.appendNode(ifFalseSt);
        tgs.newLine();
      }
      tgs.decreaseIndent();
      tgs.indent();
      tgs.append("}");
    }
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink condition$BmkR = MetaAdapterFactory.getContainmentLink(0xf72d32028a4541adL, 0xbb612369f7191040L, 0x6d3985c698be3e04L, 0x6d3985c698be3e05L, "condition");
    /*package*/ static final SContainmentLink ifTrueBranch$BmMT = MetaAdapterFactory.getContainmentLink(0xf72d32028a4541adL, 0xbb612369f7191040L, 0x6d3985c698be3e04L, 0x6d3985c698be3e07L, "ifTrueBranch");
    /*package*/ static final SContainmentLink elseBeanch$UAfB = MetaAdapterFactory.getContainmentLink(0xf72d32028a4541adL, 0xbb612369f7191040L, 0x6d3985c698be3e04L, 0x1ace29e015db1494L, "elseBeanch");
  }
}
