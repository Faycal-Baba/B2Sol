THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(4) & _f(13) & _f(19) & WellDefinedness_ForceFeeding.2,(_f(23) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & _f(13) & _f(19) & WellDefinedness_ForceFeeding.1,(_f(23) => _f(31));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinednessPrecondition_ForceFeeding.2,(_f(13) & _f(26) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinednessPrecondition_ForceFeeding.1,(_f(13) & _f(26) => _f(31));
_f(1) & _f(2) & _f(3) & _f(4) & _f(29) & WellDefinedness_getBalanceOf.2,(_f(23) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & _f(29) & WellDefinedness_getBalanceOf.1,(_f(23) => _f(30));
_f(1) & _f(2) & _f(3) & _f(4) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & WellDefinedness_transfer.3,(_f(23) => _f(27));
_f(1) & _f(2) & _f(3) & _f(4) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & WellDefinedness_transfer.2,(_f(23) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & WellDefinedness_transfer.1,(_f(23) => _f(28));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinednessPrecondition_transfer.4,(_f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(26) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinednessPrecondition_transfer.3,(_f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(26) => _f(28));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinednessPrecondition_transfer.2,(_f(10) & _f(11) & _f(12) & _f(13) & _f(26) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinednessPrecondition_transfer.1,(_f(10) & _f(11) & _f(12) & _f(13) & _f(26) => _f(27));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinedness_addRandomAmount.4,(_f(5) & _f(6) & _f(7) & _f(23) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinedness_addRandomAmount.3,(_f(5) & _f(6) & _f(7) & _f(23) => _f(24));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinedness_addRandomAmount.2,(_f(5) & _f(6) & _f(23) => _f(25));
_f(1) & _f(2) & _f(3) & _f(4) & WellDefinedness_addRandomAmount.1,(_f(5) & _f(6) & _f(23) => _f(24));
_f(1) & _f(2) & _f(3) & _f(4) & _f(21) & Operation_transfer_.1,(_f(8) => _f(22));
_f(1) & _f(2) & _f(3) & _f(4) & _f(13) & _f(19) & Operation_ForceFeeding.1,(_f(8) => _f(20));
_f(1) & _f(2) & _f(3) & _f(4) & _f(17) & Operation_transfer_abstract.1,(_f(8) => _f(18));
_f(1) & _f(2) & _f(3) & _f(4) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & Operation_transfer.1,(_f(8) => _f(16));
_f(1) & _f(2) & _f(3) & _f(4) & Operation_addRandomAmount.1,(_f(5) & _f(6) & _f(7) & _f(8) => _f(9))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((1..6)*{ADDRESS}): FIN(NATURAL*{ADDRESS})& not(((1..6)*{ADDRESS}) = {}) & BYTES: FIN(INTEGER) & not(BYTES = {}) & ((USERS) = ((((1..6)*{ADDRESS}) - ({(2|->ADDRESS)}\/{(1|->ADDRESS)})))) & ((init_msg_sender) : (USERS)) & ((init_msg_value) : (NAT)) & ((init_block_timestamp) : (NAT));
((manager_) : (USERS));
balanceOf : ((1..6)*{ADDRESS}) +-> NAT & dom(balanceOf) = ((1..6)*{ADDRESS}) & ((balanceOf) : (((((1..6)*{ADDRESS})) --> (NAT))));
((xx) : (((1..6)*{ADDRESS})));
((amount_) : (((1) .. (3))));
((((balanceOf )(xx) + amount_)) : (NAT));
"Invariant is preserved";
((((balanceOf) <+ (({((xx) |-> (((balanceOf )(xx) + amount_)))})))) : (((((1..6)*{ADDRESS})) --> (NAT))));
((from) : (((1..6)*{ADDRESS})));
((to) : (((1..6)*{ADDRESS})));
not(((to) = (from)));
((amount) : (NAT));
((((balanceOf )(to) + amount)) : (NAT));
((((balanceOf )(from) - amount)) : (NAT));
((((balanceOf) <+ (({((from) |-> (((balanceOf )(from) - amount)))}\/{((to) |-> (((balanceOf )(to) + amount)))})))) : (((((1..6)*{ADDRESS})) --> (NAT))));
((updates) : (((((1..6)*{ADDRESS})) +-> (NAT))));
((((balanceOf) <+ (updates))) : (((((1..6)*{ADDRESS})) --> (NAT))));
((((balanceOf )((2|->ADDRESS)) + amount)) : (NAT));
((((balanceOf) <+ (({(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) + amount)))})))) : (((((1..6)*{ADDRESS})) --> (NAT))));
((balanceUpdates) : (((((1..6)*{ADDRESS})) +-> (NAT))));
((((balanceOf) <+ (balanceUpdates))) : (((((1..6)*{ADDRESS})) --> (NAT))));
"Operation is well defined";
((xx) : (dom(balanceOf)));
((balanceOf) : (((dom(balanceOf)) +-> (ran(balanceOf)))));
"Operation precondition is well defined";
((to) : (dom(balanceOf)));
((from) : (dom(balanceOf)));
((adr) : (((1..6)*{ADDRESS})));
((adr) : (dom(balanceOf)));
(((2|->ADDRESS)) : (dom(balanceOf)))
END
&
THEORY EnumerateX IS
ADDRESS == {addr_0,THIS,addr_1,addr_2,addr_3,addr_4}
END
