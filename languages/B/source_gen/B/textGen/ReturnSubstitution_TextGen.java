package B.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class ReturnSubstitution_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode elem_16 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.outputParams$ke5r))) {
      tgs.appendNode(elem_16);
      if ((SNodeOperations.getNextSibling(elem_16) != null)) {
        tgs.append(",");
        tgs.append(" ");
      }
    }
    tgs.append(" ");
    tgs.append(":=");
    tgs.append(" ");
    for (SNode elem_17 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.expressions$kezt))) {
      tgs.appendNode(elem_17);
      if ((SNodeOperations.getNextSibling(elem_17) != null)) {
        tgs.append(",");
        tgs.append(" ");
      }
    }
    tgs.append(" ");
    tgs.append(";");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink outputParams$ke5r = MetaAdapterFactory.getContainmentLink(0x17157e91c2e440eaL, 0xaefc3d3bbdd08639L, 0x3d1067ce4763978eL, 0x3d1067ce4763978fL, "outputParams");
    /*package*/ static final SContainmentLink expressions$kezt = MetaAdapterFactory.getContainmentLink(0x17157e91c2e440eaL, 0xaefc3d3bbdd08639L, 0x3d1067ce4763978eL, 0x3d1067ce47639791L, "expressions");
  }
}
