THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_completed.4,(_f(13) & _f(27) & _f(26) & _f(28) & _f(36) => _f(41));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_completed.3,(_f(13) & _f(27) & _f(26) & _f(28) & _f(36) => _f(44));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_completed.2,(_f(13) & _f(27) & _f(26) & _f(36) => _f(41));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_completed.1,(_f(13) & _f(27) & _f(26) & _f(36) => _f(42));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_refund.4,(_f(13) & _f(26) & _f(27) & _f(28) & _f(36) => _f(41));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_refund.3,(_f(13) & _f(26) & _f(27) & _f(28) & _f(36) => _f(43));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_refund.2,(_f(13) & _f(26) & _f(27) & _f(36) => _f(41));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_refund.1,(_f(13) & _f(26) & _f(27) & _f(36) => _f(42));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_payement.4,(_f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) & _f(36) => _f(41));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_payement.3,(_f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) & _f(36) => _f(42));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_payement.2,(_f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(36) => _f(41));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_payement.1,(_f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(36) => _f(40));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & _f(7) & _f(8) & _f(9) & WellDefinedness_testMapping.2,(_f(39) => _f(38));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & _f(7) & _f(8) & _f(9) & WellDefinedness_testMapping.1,(_f(39) => _f(37));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_testMapping.2,(_f(7) & _f(8) & _f(36) => _f(38));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & WellDefinednessPrecondition_testMapping.1,(_f(7) & _f(8) & _f(36) => _f(37));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & _f(13) & _f(27) & _f(26) & _f(28) & _f(32) & Operation_completed.1,(_f(12) => _f(34));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & _f(13) & _f(26) & _f(27) & _f(28) & _f(29) & Operation_refund.1,(_f(12) => _f(30));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & Operation_payement.3,(_f(12) => _f(24));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & Operation_payement.2,(_f(12) => _f(23));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & Operation_payement.1,(_f(12) => _f(22));
_f(1) & _f(2) & _f(3) & _f(4) & _f(5) & _f(6) & _f(7) & _f(8) & _f(9) & Operation_testMapping.1,(_f(12) => _f(10))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
((1..6)*{ADDRESS}): FIN(NATURAL*{ADDRESS})& not(((1..6)*{ADDRESS}) = {}) & BYTES: FIN(INTEGER) & not(BYTES = {}) & ((USERS) = ((((1..6)*{ADDRESS}) - ({(2|->ADDRESS)})))) & ((init_msg_sender) : (USERS)) & ((init_msg_value) : (NAT)) & ((init_block_timestamp) : (NAT));
((1..4)*{process_state}): FIN(NATURAL*{process_state})& not(((1..4)*{process_state}) = {});
((seller_) : (USERS)) & ((buyer_) : (USERS)) & ((amount_) : (NAT));
balanceOf : ((1..6)*{ADDRESS}) +-> NAT & dom(balanceOf) = ((1..6)*{ADDRESS}) & ((balanceOf) : (((((1..6)*{ADDRESS})) --> (NAT)))) & soldOf_ : ((1..6)*{ADDRESS}) +-> NAT & dom(soldOf_) = ((1..6)*{ADDRESS}) & ((soldOf_) : (((((1..6)*{ADDRESS})) --> (NAT))));
((seller) : (USERS)) & ((buyer) : (USERS)) & ((arbiter) : (((1..6)*{ADDRESS}))) & ((price) : (NAT)) & ((state) : (((1..4)*{process_state})));
((msg_sender) : (((1..6)*{ADDRESS})));
((msg_value) : ((NAT-{0})));
((((soldOf_ )(msg_sender) + msg_value)) : (NAT));
((({((msg_sender) |-> (((soldOf_ )(msg_sender) + msg_value)))})) : (((((1..6)*{ADDRESS})) +-> (NAT))));
((soldOf_) <+ (({((msg_sender) |-> (((soldOf_ )(msg_sender) + msg_value)))}))) : ((1..6)*{ADDRESS}) +-> NAT & dom(((soldOf_) <+ (({((msg_sender) |-> (((soldOf_ )(msg_sender) + msg_value)))})))) = ((1..6)*{ADDRESS}) & ((((soldOf_) <+ (({((msg_sender) |-> (((soldOf_ )(msg_sender) + msg_value)))})))) : (((((1..6)*{ADDRESS})) --> (NAT))));
"Precondition predicate";
((msg_sender) : (USERS));
((msg_value) : (NAT));
((state) = ((1|->process_state)));
((msg_sender) = (buyer));
((msg_value) = (price));
((((balanceOf )(msg_sender) - msg_value)) : (NAT));
((((balanceOf )((2|->ADDRESS)) + msg_value)) : (NAT));
((buyer) : (((1..6)*{ADDRESS})));
(((2|->ADDRESS)) : (((1..6)*{ADDRESS})));
not((((2|->ADDRESS)) = (buyer)));
((((balanceOf )((2|->ADDRESS)) + price)) : (NAT));
((((balanceOf )(buyer) - price)) : (NAT));
((balanceOf) <+ (({((buyer) |-> (((balanceOf )(buyer) - price)))}\/{(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) + price)))}))) : ((1..6)*{ADDRESS}) +-> NAT & dom(((balanceOf) <+ (({((buyer) |-> (((balanceOf )(buyer) - price)))}\/{(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) + price)))})))) = ((1..6)*{ADDRESS}) & ((((balanceOf) <+ (({((buyer) |-> (((balanceOf )(buyer) - price)))}\/{(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) + price)))})))) : (((((1..6)*{ADDRESS})) --> (NAT))));
((msg_sender) = (arbiter));
((state) = ((2|->process_state)));
((((balanceOf )((2|->ADDRESS)) - price)) : (NAT));
((((balanceOf )(buyer) + price)) : (NAT));
not(((buyer) = ((2|->ADDRESS))));
((balanceOf) <+ (({(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) - price)))}\/{((buyer) |-> (((balanceOf )(buyer) + price)))}))) : ((1..6)*{ADDRESS}) +-> NAT & dom(((balanceOf) <+ (({(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) - price)))}\/{((buyer) |-> (((balanceOf )(buyer) + price)))})))) = ((1..6)*{ADDRESS}) & ((((balanceOf) <+ (({(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) - price)))}\/{((buyer) |-> (((balanceOf )(buyer) + price)))})))) : (((((1..6)*{ADDRESS})) --> (NAT))));
((((balanceOf )(seller) + price)) : (NAT));
((seller) : (((1..6)*{ADDRESS})));
not(((seller) = ((2|->ADDRESS))));
((balanceOf) <+ (({(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) - price)))}\/{((seller) |-> (((balanceOf )(seller) + price)))}))) : ((1..6)*{ADDRESS}) +-> NAT & dom(((balanceOf) <+ (({(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) - price)))}\/{((seller) |-> (((balanceOf )(seller) + price)))})))) = ((1..6)*{ADDRESS}) & ((((balanceOf) <+ (({(((2|->ADDRESS)) |-> (((balanceOf )((2|->ADDRESS)) - price)))}\/{((seller) |-> (((balanceOf )(seller) + price)))})))) : (((((1..6)*{ADDRESS})) --> (NAT))));
"Operation precondition is well defined";
((msg_sender) : (dom(soldOf_)));
((soldOf_) : (((dom(soldOf_)) +-> (ran(soldOf_)))));
"Operation is well defined";
((msg_sender) : (dom(balanceOf)));
((balanceOf) : (((dom(balanceOf)) +-> (ran(balanceOf)))));
(((2|->ADDRESS)) : (dom(balanceOf)));
((buyer) : (dom(balanceOf)));
((seller) : (dom(balanceOf)))
END
&
THEORY EnumerateX IS
ADDRESS == {addr_0,THIS,addr_1,addr_2,addr_3,addr_4};
process_state == {INIT,DEPOSITED,REFUNDED,COMPLETED}
END
