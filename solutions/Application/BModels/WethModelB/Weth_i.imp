/* Weth_i
 * Author: ASUS
 * Creation date: 7/12/2023
 */

IMPLEMENTATION Weth_i
REFINES Weth
SEES Solidity_Types
IMPORTS Platform, account, allowance, depositedOver100
CONCRETE_VARIABLES
    manager_i, depositers_i, index_i
INVARIANT
    index_i : NAT & 
    depositers_i : 0..MAXINT --> ADDRESS &
    manager_i : USERS & manager_i = manager & 
    depositers = depositers_i  & index_i = index
INITIALISATION
    depositers_i := (0..MAXINT) * USERS ;
    manager_i := manager_;
    index_i := 0
OPERATIONS

    deposit(msg_sender, msg_value) = 
    BEGIN
    VAR val IN
        val <-- get_accountOf(msg_sender);
        set_accountOf(msg_sender, val + msg_value);  
        transfer(msg_sender, THIS, msg_value); 
        VAR balance, distinct IN
            balance <-- get_accountOf(msg_sender);
            distinct <-- get_depositedOver_100(msg_sender);
            IF balance > 100 & distinct = FALSE THEN 
                depositers_i(index_i) := msg_sender;
                index_i := index_i + 1 ;
                set_depositedOver_100(msg_sender, TRUE)
            END
        END
    END
    END
    ;
    withdraw(msg_sender, amount) = 
    BEGIN
    VAR val IN
        val <-- get_accountOf(msg_sender);
        transfer(THIS , msg_sender, amount);
        set_accountOf(msg_sender, val -  amount)       
    END
    END
    ;

    transferTo(msg_sender, dst, amount) = 
    BEGIN
        VAR sender_balance, receiver_balance IN
            sender_balance <-- get_accountOf(msg_sender);
            receiver_balance <-- get_accountOf(dst);
            set_accountOf(msg_sender,  sender_balance - amount);
            set_accountOf(dst, receiver_balance + amount)
        END    
    END
    ;
    
    approve(msg_sender, dst, amount)= 
    BEGIN
        set_allowanceOf(msg_sender, dst, amount)        
    END
    ;
    transferFrom(msg_sender, sender, recipient, amount) =
    BEGIN
        VAR val1, val2, val3 IN
            val1 <-- get_accountOf(sender);
            val2 <-- get_accountOf(recipient);
            val3 <-- get_allowanceOf(sender, msg_sender);
            set_accountOf(sender, val1 - amount);
            set_accountOf(recipient, val2 + amount);
            set_allowanceOf(sender, msg_sender, val3 - amount)
        END
    END
    ;
    giftToFirst100Depositers(msg_sender, msg_value) =
    BEGIN
        transfer(msg_sender, THIS, msg_value); 
        VAR ii IN 
            ii := 0;
            WHILE ii < 100 DO
                VAR value IN 
                    value <--  get_accountOf(depositers_i(ii));
                    set_accountOf(depositers_i(ii ), value + 1);
                    ii := ii + 1
                END
            INVARIANT depositers(ii) : dom(accountOf)            
            VARIANT 100 - ii
            
            END
        END
    END                
 END