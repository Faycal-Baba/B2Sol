package B.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class Operation_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode elem_10 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.outputParamType$EWfy))) {
      tgs.appendNode(elem_10);
      if ((SNodeOperations.getNextSibling(elem_10) != null)) {
        tgs.append(",");
        tgs.append(" ");
      }
    }
    tgs.append(" ");
    //  
    boolean returnValueAuxVar_4;
    //  
    do {
      returnValueAuxVar_4 = !(ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.outputParamType$EWfy)).isEmpty());
      break;
    } while (false);
    //  
    if (returnValueAuxVar_4) {
      tgs.append("<--");
    }
    //  
    boolean returnValueAuxVar_5;
    //  
    do {
      returnValueAuxVar_5 = !(ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.outputParamType$EWfy)).isEmpty());
      break;
    } while (false);
    //  
    if (returnValueAuxVar_5) {
      tgs.append(" ");
    }
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append(" ");
    tgs.append("(");
    tgs.append(" ");
    for (SNode elem_11 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.inputParameters$4i0F))) {
      tgs.appendNode(elem_11);
      if ((SNodeOperations.getNextSibling(elem_11) != null)) {
        tgs.append(",");
        tgs.append(" ");
      }
    }
    tgs.append(" ");
    tgs.append(")");
    tgs.append("PRE");
    tgs.newLine();
    tgs.indent();
    for (SNode elem_12 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.typingPredicates$4o75))) {
      tgs.increaseIndent();
      tgs.indent();
      tgs.appendNode(elem_12);
      tgs.decreaseIndent();
      tgs.newLine();
      tgs.indent();
      if ((SNodeOperations.getNextSibling(elem_12) != null)) {
        tgs.append("&");
        tgs.append(" ");
      }
    }
    //  
    boolean returnValueAuxVar_6;
    //  
    do {
      returnValueAuxVar_6 = !(ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.typingPredicates$4o75)).isEmpty()) && !(ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.preconditions$4p39)).isEmpty());
      break;
    } while (false);
    //  
    if (returnValueAuxVar_6) {
      tgs.append("&");
      tgs.newLine();
      tgs.indent();
    }
    for (SNode elem_13 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.preconditions$4p39))) {
      tgs.increaseIndent();
      tgs.indent();
      tgs.appendNode(elem_13);
      tgs.decreaseIndent();
      if ((SNodeOperations.getNextSibling(elem_13) != null)) {
        tgs.append("&");
        tgs.append(" ");
      }
    }
    tgs.append("THEN");
    tgs.newLine();
    tgs.indent();
    for (SNode elem_14 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.body$4v9z))) {
      tgs.increaseIndent();
      tgs.indent();
      tgs.appendNode(elem_14);
      tgs.decreaseIndent();
      tgs.newLine();
      tgs.indent();
      if ((SNodeOperations.getNextSibling(elem_14) != null)) {
        tgs.append(" ");
      }
    }
    tgs.append("END");
    tgs.newLine();
    tgs.indent();
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink outputParamType$EWfy = MetaAdapterFactory.getContainmentLink(0x17157e91c2e440eaL, 0xaefc3d3bbdd08639L, 0x6d3985c698aa2036L, 0x21300da940bef9e9L, "outputParamType");
    /*package*/ static final SContainmentLink inputParameters$4i0F = MetaAdapterFactory.getContainmentLink(0x17157e91c2e440eaL, 0xaefc3d3bbdd08639L, 0x6d3985c698aa2036L, 0x6d3985c698ada694L, "inputParameters");
    /*package*/ static final SContainmentLink typingPredicates$4o75 = MetaAdapterFactory.getContainmentLink(0x17157e91c2e440eaL, 0xaefc3d3bbdd08639L, 0x6d3985c698aa2036L, 0x6d3985c698ada699L, "typingPredicates");
    /*package*/ static final SContainmentLink preconditions$4p39 = MetaAdapterFactory.getContainmentLink(0x17157e91c2e440eaL, 0xaefc3d3bbdd08639L, 0x6d3985c698aa2036L, 0x6d3985c698ada69dL, "preconditions");
    /*package*/ static final SContainmentLink body$4v9z = MetaAdapterFactory.getContainmentLink(0x17157e91c2e440eaL, 0xaefc3d3bbdd08639L, 0x6d3985c698aa2036L, 0x6d3985c698ada6a2L, "body");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }
}
