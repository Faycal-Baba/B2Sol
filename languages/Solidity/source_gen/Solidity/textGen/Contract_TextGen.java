package Solidity.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class Contract_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("pragma solidity ^0.8;");
    tgs.newLine();
    tgs.append("// SPDX-License-Identifier: MIT");
    tgs.newLine();
    tgs.newLine();
    tgs.append("contract");
    tgs.append(" ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.newLine();
    tgs.append("{");
    tgs.newLine();
    tgs.increaseIndent();
    for (SNode elem_ : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.contractParts$lFDN))) {
      ctx.getBuffer().area().increaseIndent();
      tgs.appendNode(elem_);
      ctx.getBuffer().area().decreaseIndent();
      tgs.newLine();
    }
    tgs.decreaseIndent();
    tgs.append("}");
    tgs.newLine();
    tgs.indent();
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink contractParts$lFDN = MetaAdapterFactory.getContainmentLink(0xf72d32028a4541adL, 0xbb612369f7191040L, 0x6d3985c698bd882bL, 0x6d3985c698bd8833L, "contractParts");
  }
}
