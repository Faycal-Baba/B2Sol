package Solidity.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class WhileStatement_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("while");
    tgs.append("(");
    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.condition$4XNn));
    tgs.append(")");
    tgs.append("{");
    tgs.newLine();
    tgs.increaseIndent();
    for (SNode elem_16 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.body$4Yhp))) {
      tgs.indent();
      tgs.appendNode(elem_16);
      tgs.newLine();
    }
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("}");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink condition$4XNn = MetaAdapterFactory.getContainmentLink(0xf72d32028a4541adL, 0xbb612369f7191040L, 0x6d3985c698be3fa9L, 0x6d3985c698be3faaL, "condition");
    /*package*/ static final SContainmentLink body$4Yhp = MetaAdapterFactory.getContainmentLink(0xf72d32028a4541adL, 0xbb612369f7191040L, 0x6d3985c698be3fa9L, 0x6d3985c698be3facL, "body");
  }
}
